# Cur i láthair: AWSandGo
# 5 Feabhra, 2015
#
# Header for first and last slide
#
# Fráma 1
AWS and Go
Go Phoenix-Chandler Programmers
18:30 5 Feb 2015
Tags: go golang go-phoenix-chandler

Brian Downs
Software Engineer, IO Data Centers

http://briandowns.github.io
https://github.com/go-phoenix-chandler
@bdowns328

# Fráma 2
* API Access and Setup

To use the AWS API you need to get an access key and a secret key.  To do so, you need to go to the IAM section of your account and create a role that has those permissions.  Then, assign that role to a group and make sure that the user is a member.  There's fine grain access controls in IAM so make sure to understand them when assigning.

To avoid security problems, add the Access Key and Secret Key to the user's environment that will be running the applications.  That way you don't have to include that them in your code.

From your CLI or in your shell's setup file:

 $ export AWS_ACCESS_KEY="somethingofsomeinterest"
 $ export AWS_SECRET_KEY="somethingofsomeinterest"

# Fráma 3
* Choosing a SDK

There are a number of SDK's for use with Amazon Web Services.  Below are the most popular ordered by GitHub stars from highest to lowest.

.link https://github.com/awslabs/aws-sdk-go aws-sdk-go
.link https://github.com/goamz/goamz goamz
.link https://github.com/abneptis/GoAWS GoAWS

For this talk I've chosen the SDK from AWSLabs since it's the most complete and supports all AWS services.

# Fráma 4
* aws-sdk-go

_From_the_GitHub_README:_

The AWS SDK for Go is a set of clients for *all* Amazon Web Services APIs that initially started as [[https://github.com/awslabs/aws-sdk-go/tree/50f5f12927d77de6ec71a7473fe1f1081734d908][Stripe's aws-go library]], and is currently under development to implement full service coverage and other standard AWS SDK features.

It is currently *highly* *untested*, so please be patient and report any bugs or problems you experience. The APIs may change radically without much warning, so please vendor your dependencies w/ Godep or similar.

Please do not confuse this for a stable, feature-complete library.

# Fráma 5
* Installation

Base:

 go get github.com/awslabs/aws-sdk-go/aws

EC2:

 go get github.com/awslabs/aws-sdk-go/gen/ec2

S3:

 go get github.com/awslabs/aws-sdk-go/gen/s3

RDS:

 go get github.com/awslabs/aws-sdk-go/gen/rds

SQS:

 go get github.com/awslabs/aws-sdk-go/gen/sqs

# Fráma
* A bit about the package...

github.com/awslabs/aws-sdk-go/aws contains support code for the various AWS clients.  This package also contains the base data types for how the data is going to be passed back and forth to and from AWS.
Example:

 aws.StringValue

The API passes back strings in this data type.  It's signature is

 type StringValue *string

so when printing these values, they need to be written as any pointer being deferenced.

Boolean values for setting a struct field are expected to be

 aws.Boolean(true||false)

# Fráma
* EC2

.iframe http://www.pyimagesearch.com/wp-content/uploads/2014/10/gpu_amazon_ec2_logo.png 800 500

# Fráma
* Connect to EC2

.code src/ec2.go /^func Connect/,/^}/

# Fráma
* Start an Instance

To start an instance you need to provide a pointer of StopInstancesRequest with the necessary information to the StopInstance method.

.code src/ec2.go /^func Start/,/^}/

# Fráma
* Stop an Instance

.code src/ec2.go /^func Stop/,/^}/

# Fráma
* List Instances Including Their ID, Name, and Current State

.code src/ec2.go /^func ListInstanceData/,/^}/

# Fráma
* S3

.iframe http://www.linkgard.com/wp-content/uploads/2013/10/amazon_aws-s3.png 1000 500

# Fráma
* Basic Operations

Save a file

.code src/s3.go //,//

Retrieve a file

.code src/s3.go //,//

# Fráma
* RDS

.iframe https://www.scalebase.com/wp-content/uploads/2014/10/MySQL-migration-to-Amazon-RDS.png 1000 500

# Fráma
* Connect to RDS

Connecting to RDS is as exciting as it was connecting to EC2 and S3...

.code src/rds.go /^func Connect/,/^}/

# Fráma
* List DB instances

.code src/rds.go /^func ListDBInstances/,/^}/

# Fráma
* Restore From Snapshot

.code src/rds.go /^func RestoreFromSnapshot/,/^}/

# Fráma
* Conclusions

Working with AWS using Go:

- More verbose than Python
- Less verbose than Java
- More fun than both of the before mentioned
